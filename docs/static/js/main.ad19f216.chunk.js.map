{"version":3,"sources":["services/api.js","components/CharacterCard.js","images/parasites.png","components/CharacterList.js","images/PickleRick.png","components/CharacterDetail.js","components/FilterByName.js","components/FilterBySpecies.js","components/Filters.js","images/logo1.png","components/Header.js","components/App.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","data","results","map","character","id","image","name","species","gender","origin","status","episodes","episode","length","CharacterCard","props","to","info","className","src","alt","CharacterList","characterData","characters","sort","a","b","eachCharacter","parasites","CharacterDetail","undefined","selectedCharacter","PickleRick","FilterByName","htmlFor","type","value","onChange","ev","handleFilter","key","target","FilterBySpecies","Filters","onSubmit","preventDefault","Header","logo","App","useState","setCharacters","setName","setSpecies","useEffect","filteredCharacters","filter","toLowerCase","includes","exact","path","inputChange","render","parseInt","match","params","find","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad19f216.chunk.js","sourcesContent":["const getDataFromApi = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character/\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          image: character.image,\r\n          name: character.name,\r\n          species: character.species,\r\n          gender: character.gender,\r\n          origin: character.origin.name,\r\n          status: character.status,\r\n          episodes: character.episode.length,\r\n        };\r\n      });\r\n    });\r\n};\r\nexport default getDataFromApi;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/characterCard.scss\";\r\n\r\nfunction CharacterCard(props) {\r\n  const statusIcon = () => {\r\n    if (props.info.status === \"Dead\") {\r\n      return <i className=\"fas fa-skull-crossbones\"></i>;\r\n    } else if (props.info.status === \"unknown\") {\r\n      return <i className=\"fas fa-question\"></i>;\r\n    } else {\r\n      return <i className=\"fas fa-heartbeat\"></i>;\r\n    }\r\n  };\r\n  const speciesIcon = () => {\r\n    return props.info.species === \"Alien\" ? (\r\n      <i className=\"fas fa-pastafarianism\"></i>\r\n    ) : (\r\n      <i className=\"fas fa-user\"></i>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to={`/character/${props.info.id}`}>\r\n        <img\r\n          className=\"cardList__eachCard--img\"\r\n          src={props.info.image}\r\n          alt={props.info.name}\r\n        />\r\n        <h3 className=\"cardList__eachCard--name\">{props.info.name}</h3>\r\n        <h4 className=\"cardList__eachCard--species\">{props.info.species}</h4>\r\n        <span className=\"cardList__eachCard--icon\">{statusIcon()}</span>\r\n        <span className=\"cardList__eachCard--icon\">{speciesIcon()}</span>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterCard;\r\n","export default __webpack_public_path__ + \"static/media/parasites.e831be4e.png\";","import CharacterCard from \"./CharacterCard\";\r\nimport \"../stylesheets/characterList.scss\";\r\nimport parasites from \"../images/parasites.png\";\r\n\r\nconst CharacterList = (props) => {\r\n  // To sort them by name, it gets the index, so you need to specify the data you want to sort it by.\r\n  const sortedList = props.characters.sort((a, b) =>\r\n    a.name > b.name ? 1 : a.name < b.name ? -1 : 0\r\n  );\r\n\r\n  const characterData = sortedList.map((eachCharacter) => {\r\n    return (\r\n      <li key={eachCharacter.id} className=\"cardList__eachCard\">\r\n        <CharacterCard info={eachCharacter} />\r\n      </li>\r\n      // Since characterData is an array, we have to do a ternary conditional below and set length>0 so it renders the list\r\n    );\r\n  });\r\n  return (\r\n    <ul className=\"cardList\">\r\n      {characterData.length > 0 ? (\r\n        characterData\r\n      ) : (\r\n        <li className=\"cardList__notFound\">\r\n          Not a character, it's a parasite!{\" \"}\r\n          <img\r\n            className=\"cardList__notFound--parasite\"\r\n            src={parasites}\r\n            alt=\"\"\r\n          />\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","export default __webpack_public_path__ + \"static/media/PickleRick.a3c086f5.png\";","import { Link } from \"react-router-dom\";\r\nimport PickleRick from \"../images/PickleRick.png\";\r\nimport \"../stylesheets/characterDetail.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CharacterDetail(props) {\r\n  if (props.selectedCharacter === undefined) {\r\n    return (\r\n      <>\r\n        <Link className=\"link\" to=\"/\">\r\n          Return\r\n        </Link>\r\n        <div className=\"pickleContainer\">\r\n          <img\r\n            className=\"pickleContainer__img\"\r\n            src={PickleRick}\r\n            alt=\"character not found\"\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Link className=\"link\" to=\"/\">\r\n          {\" \"}\r\n          Return{\" \"}\r\n        </Link>\r\n        <section className=\"details\">\r\n          <img\r\n            className=\"details__img\"\r\n            src={props.selectedCharacter.image}\r\n            alt={props.selectedCharacter.name}\r\n          />\r\n          <ul className=\"details__list\">\r\n            <li className=\"details__list--data\">\r\n              Name:{\" \"}\r\n              <span className=\"description\">\r\n                {\" \"}\r\n                {props.selectedCharacter.name}\r\n              </span>\r\n            </li>\r\n            <li className=\"details__list--data\">\r\n              Gender:{\" \"}\r\n              <span className=\"description\">\r\n                {props.selectedCharacter.gender}\r\n              </span>\r\n            </li>\r\n            <li className=\"details__list--data\">\r\n              Species:{\" \"}\r\n              <span className=\"description\">\r\n                {props.selectedCharacter.species}\r\n              </span>\r\n            </li>\r\n            <li className=\"details__list--data\">\r\n              Origin:{\" \"}\r\n              <span className=\"description\">\r\n                {props.selectedCharacter.origin}\r\n              </span>\r\n            </li>\r\n            <li className=\"details__list--data\">\r\n              Number of episodes featured:{\" \"}\r\n              <span className=\"description\">\r\n                {props.selectedCharacter.episodes}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\nCharacterDetail.propTypes = {\r\n  info: PropTypes.shape({\r\n    image: PropTypes.string,\r\n    name: PropTypes.string,\r\n    species: PropTypes.string,\r\n    id: PropTypes.number,\r\n  }),\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import \"../stylesheets/filterByName.scss\";\r\n\r\nconst FilterByName = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      key: \"name\",\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"filters__form--nameTitle\" htmlFor=\"name\">\r\n        Filter by name:\r\n      </label>\r\n      <input\r\n        className=\"filters__form--nameInput\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        value={props.name}\r\n        id=\"name\"\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default FilterByName;\r\n","import \"../stylesheets/filterBySpecies.scss\";\r\n\r\nconst FilterBySpecies = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      key: \"species\",\r\n      value: ev.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"filters__form--speciesTitle\" htmlFor=\"species\">\r\n        Filter by species:\r\n      </label>\r\n      <select\r\n        className=\"filters__form--speciesInput\"\r\n        name=\"species\"\r\n        id=\"species\"\r\n        value={props.species}\r\n        onChange={handleChange}\r\n      >\r\n        <option value=\"All\">All</option>\r\n        <option value=\"Human\">Human</option>\r\n        <option value=\"Alien\">Alien</option>\r\n      </select>\r\n    </>\r\n  );\r\n};\r\nexport default FilterBySpecies;\r\n","import FilterByName from \"./FilterByName\";\r\nimport FilterBySpecies from \"./FilterBySpecies\";\r\nimport \"../stylesheets/filters.scss\";\r\n\r\nconst Filters = (props) => {\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <section className=\"filters\">\r\n      <form className=\"filters__form\" onSubmit={handleSubmit}>\r\n        <FilterByName handleFilter={props.handleFilter} name={props.name} />\r\n        <FilterBySpecies\r\n          handleFilter={props.handleFilter}\r\n          species={props.species}\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\nexport default Filters;\r\n","export default __webpack_public_path__ + \"static/media/logo1.ee0728d3.png\";","import { Link } from \"react-router-dom\";\r\nimport logo from \"../images/logo1.png\";\r\nimport \"../stylesheets/header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <Link to=\"/\">\r\n          <img className=\"header__logo\" src={logo} alt=\"Rick and Morty logo\" />\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport getDataFromApi from \"../services/api\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Filters from \"./Filters\";\nimport Header from \"./Header\";\nimport \"../stylesheets/App.scss\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [species, setSpecies] = useState(\"All\");\n\n  useEffect(() => {\n    getDataFromApi().then((data) => setCharacters(data));\n  }, []);\n  // console.log(name);\n  const handleFilter = (inputChange) => {\n    if (inputChange.key === \"name\") {\n      setName(inputChange.value);\n    } else if (inputChange.key === \"species\") {\n      setSpecies(inputChange.value);\n    }\n    // console.log(inputChange);\n  };\n\n  const filteredCharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(name.toLowerCase());\n    })\n    .filter((character) => {\n      return species === \"All\" ? true : character.species === species;\n    });\n\n  const renderDetail = (props) => {\n    const id = parseInt(props.match.params.id);\n    const selectedCharacter = characters.find((character) => {\n      return character.id === id;\n    });\n\n    return <CharacterDetail selectedCharacter={selectedCharacter} />;\n  };\n  return (\n    <div className=\"page\">\n      <div className=\"layer\">\n        <Header />\n        <main className=\"main\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Filters\n                handleFilter={handleFilter}\n                name={name}\n                species={species}\n              />\n              <CharacterList characters={filteredCharacters} />\n            </Route>\n            <Route path=\"/character/:id\" render={renderDetail} />\n          </Switch>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./stylesheets/index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}